{"version":3,"sources":["Components/MainPage/index.module.css","Components/Background/index.module.css","Components/Background/index.js","Components/Header/index.js","Components/ServerCard/index.js","Components/MainPage/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","mainGrid","headerGridItem","cardContainer","serverCard","newsContainer","starsLayout","parallaxAnimation","test","Background","react_default","a","createElement","className","style","Component","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","React","ServerCard","data","Card","CardImg","top","width","src","CardBody","CardTitle","name","CardSubtitle","map","CardText","descr","Button","cardMock","players","discord","gameLink","MainPage","Header_Header","element","Components_ServerCard","App","Switch","Route","exact","path","component","Components_Background","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9286708.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainGrid\":\"MainPage_mainGrid__2_Axi\",\"headerGridItem\":\"MainPage_headerGridItem__2j9_E\",\"cardContainer\":\"MainPage_cardContainer__KZTuw\",\"serverCard\":\"MainPage_serverCard__3KeeB\",\"newsContainer\":\"MainPage_newsContainer__3VlDM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starsLayout\":\"Background_starsLayout__3sKR6\",\"parallaxAnimation\":\"Background_parallaxAnimation__1l2kr\",\"test\":\"Background_test__oMy-A\"};","import React, { Component } from 'react';\r\n//import { withStyles } from 'react-with-styles';\r\n\r\n//import ParallaxMousemove from 'react-parallax-mousemove'\r\n\r\nimport style from './index.module.css';\r\n\r\n//<div className={ style.starsLayout }/>\r\n\r\nclass Background extends Component {\r\n    render(){\r\n      /*const styles = {\r\n        outter: {\r\n          backgroundSize: 'cover',\r\n          width:'100%',\r\n          height: '100%',\r\n          position: 'absolute',\r\n          overflow: 'hidden',\r\n          'z-index': -1,\r\n        },\r\n        bgLayerStyle: {\r\n          position: 'absolute',\r\n          height: '100%',\r\n          transform: 'translate(-15%, 17%)',\r\n        }\r\n      };*/\r\n\r\n        return (\r\n            <div className={ style.starsLayout }/>\r\n        );\r\n    }\r\n}\r\n\r\n/* return (\r\n            <div>\r\n              <ParallaxMousemove containerStyle={styles.outter} fullHeight={true}>\r\n                <ParallaxMousemove.Layer layerStyle={styles.bgLayerStyle} config={{\r\n                  xFactor: 0.05,\r\n                  yFactor: 0,\r\n                  springSettings: {\r\n                    stiffness: 1000,\r\n                    damping: 30\r\n                  }\r\n                }}>\r\n                  <img src={require('../../space2.jpg')} alt=\"Parallax Layer\"/>\r\n                </ParallaxMousemove.Layer>\r\n              </ParallaxMousemove>\r\n            </div>\r\n        );*/\r\n\r\nexport default Background;","import React from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem } from 'reactstrap';\r\n\r\nexport default class Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n        <div>\r\n          <Navbar color=\"light\" light expand=\"sm\">\r\n            <NavbarBrand href=\"/\">g-eHub</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <NavLink href=\"https://github.com/Kernstall/g-eHub\">GitHub</NavLink>\r\n                </NavItem>\r\n                <UncontrolledDropdown nav inNavbar>\r\n                  <DropdownToggle nav caret>\r\n                    Баны\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                    <DropdownItem>\r\n                      Режим игрок\r\n                    </DropdownItem>\r\n                    <DropdownItem>\r\n                      Режим админ\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </Nav>\r\n            </Collapse>\r\n          </Navbar>\r\n        </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle, Button } from 'reactstrap';\r\n\r\nconst ServerCard = (props) => {\r\n  const data = props.data;\r\n  return (\r\n      <div>\r\n        <Card>\r\n          <CardImg top width=\"100px\" src=\"https://vignette.wikia.nocookie.net/logopedia/images/1/16/300px-DC_Comics_logo.svg.png/revision/latest?cb=20110127205851\" />\r\n          <CardBody>\r\n            <CardTitle>{ data.name }</CardTitle>\r\n            <CardSubtitle>{ data.map }</CardSubtitle>\r\n            <CardText>{ data.descr }</CardText>\r\n            <Button>Button</Button>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default ServerCard;","import React, { Component } from 'react';\r\n//import { withStyles } from 'react-with-styles';\r\nimport Header from '../../Components/Header'\r\nimport ServerCard from '../../Components/ServerCard'\r\n\r\nimport style from './index.module.css';\r\n\r\n//<div className={ style.starsLayout }/>\r\n\r\nconst cardMock = [\r\n  {\r\n    name: 'Gamma',\r\n    players: 60,\r\n    map: 'torch',\r\n    descr: 'Лучший сервер',\r\n    discord: '',\r\n    gameLink: ''\r\n  },\r\n  {\r\n    name: 'Eris',\r\n    players: 60,\r\n    map: 'torch',\r\n    descr: 'Лучший сервер',\r\n    discord: '',\r\n    gameLink: ''\r\n  }\r\n];\r\n\r\nclass MainPage extends Component {\r\n  render(){\r\n\r\n    return (\r\n        <div className={ style.mainGrid }>\r\n          <div className={ style.headerGridItem }>\r\n            <Header/>\r\n          </div>\r\n          <div className={ style.cardContainer }>\r\n            { cardMock.map(element => (<div className={ style.serverCard }><ServerCard data={ element }/></div>)) }\r\n          </div>\r\n          <div className={ style.newsContainer }>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default MainPage;","import React, { Component } from 'react';\nimport './App.css';\nimport Background from './Components/Background'\nimport MainPage from './Components/MainPage'\nimport { Switch, Route } from 'react-router-dom'\n\nclass App extends Component {\n  render() {\n    return (\n        <div>\n          <Switch>\n            <Route exact path='/' component={(MainPage)}/>\n            <Route path='/' component={() => (<div>Ты обосрался!</div>)}/>\n          </Switch>\n          <Background/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}